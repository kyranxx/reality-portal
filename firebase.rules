rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isSignedIn() && 
            exists(/databases/$(database)/documents/roles/$(request.auth.uid)) &&
            get(/databases/$(database)/documents/roles/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Public read for properties, authenticated create/update/delete
    match /properties/{propertyId} {
      allow read: if true; // Anyone can read property listings
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow update: if isSignedIn() && (isOwner(resource.data.userId) || isAdmin());
      allow delete: if isSignedIn() && (isOwner(resource.data.userId) || isAdmin());
      
      // Property images subcollection
      match /images/{imageId} {
        allow read: if true;
        allow write: if isSignedIn() && (isOwner(get(/databases/$(database)/documents/properties/$(propertyId)).data.userId) || isAdmin());
      }
    }
    
    // User settings - only the user or admin can access
    match /userSettings/{userId} {
      allow read: if isSignedIn() && (isOwner(userId) || isAdmin());
      allow write: if isSignedIn() && (isOwner(userId) || isAdmin());
    }
    
    // User profiles - read is public, write is restricted
    match /users/{userId} {
      allow read: if true;
      allow create: if isSignedIn() && isOwner(userId);
      allow update: if isSignedIn() && (isOwner(userId) || isAdmin());
      allow delete: if isAdmin();
    }
    
    // Messages - only between sender and recipient
    match /messages/{messageId} {
      allow read: if isSignedIn() && (isOwner(resource.data.senderId) || isOwner(resource.data.recipientId));
      allow create: if isSignedIn() && isOwner(request.resource.data.senderId);
      allow update: if isSignedIn() && (isOwner(resource.data.senderId) || isOwner(resource.data.recipientId));
      allow delete: if isAdmin();
    }
    
    // Favorites - only accessible by the user who created them
    match /favorites/{favoriteId} {
      allow read: if isSignedIn() && isOwner(resource.data.userId);
      allow create: if isSignedIn() && isOwner(request.resource.data.userId);
      allow update: if isSignedIn() && isOwner(resource.data.userId);
      allow delete: if isSignedIn() && isOwner(resource.data.userId);
    }
    
    // Admin roles - only admins can read/write
    match /roles/{userId} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }
    
    // Default deny for all other documents
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
